{"version":3,"sources":["webpack:///./src/templates/blog-post-html.js"],"names":["_ref","post","data","allFile","edges","node","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_container__WEBPACK_IMPORTED_MODULE_3__","gatsby__WEBPACK_IMPORTED_MODULE_2__","Link","to","className","_stylesheets_post_module_css__WEBPACK_IMPORTED_MODULE_4___default","homeBtn","main","relativePath","replace","toUpperCase","iframecontainer","title","src","publicURL","frameborder","width","height","iframe","query"],"mappings":"sNAMeA,GAAc,IACnBC,EADmBD,EAAXE,KACIC,QAAQC,MAAM,GAAGC,KACnC,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACC,EAAAF,EAAD,KACAD,EAAAC,EAAAC,cAACE,EAAAC,MAAKC,GAAG,IAAIC,UAAWC,EAAAP,EAAUQ,SAAlC,WACIT,EAAAC,EAAAC,cAAA,OAAKK,UAAWC,EAAAP,EAAUS,MACtBV,EAAAC,EAAAC,cAAA,UAAKP,EAAKgB,aAAaC,QAAQ,QAAS,IAAIA,QAAQ,cAAe,IAAIA,QAAQ,KAAM,KAAKC,eAC1Fb,EAAAC,EAAAC,cAAA,OAAKK,UAAWC,EAAAP,EAAUa,iBACtBd,EAAAC,EAAAC,cAAA,UAAQa,MAAOpB,EAAKgB,aAAcK,IAAKrB,EAAKsB,UAAWC,YAAY,IACnEC,MAAM,OAAOC,OAAO,OAAOb,UAAWC,EAAAP,EAAUoB,cAQjE,IAAMC","file":"component---src-templates-blog-post-html-js-a5065d024ae20ecafe3d.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Container from \"../components/container\"\nimport PostStyle from \"../stylesheets/post.module.css\"\n\n\nexport default ({ data }) => {\n    const post = data.allFile.edges[0].node\n    return (\n        <div>\n            <Container>\n            <Link to=\"/\" className={PostStyle.homeBtn}> &larr; Home</Link>\n                <div className={PostStyle.main}>\n                    <h2>{post.relativePath.replace('.html', '').replace(/notebook\\//g, '').replace(/_/g, ' ').toUpperCase()}</h2>\n                    <div className={PostStyle.iframecontainer}>\n                        <iframe title={post.relativePath} src={post.publicURL} frameborder=\"0\" \n                        width=\"100%\" height=\"auto\" className={PostStyle.iframe}/>\n                    </div>\n                </div>\n            </Container>\n        </div>\n    )\n}\n\nexport const query = graphql`\nquery($rPath: String!) {\n    allFile(filter: { relativePath: { eq: $rPath } } ) {\n        edges {\n            node {\n                relativePath,\n                extension,\n                publicURL\n          }\n        }\n    }\n}\n`"],"sourceRoot":""}